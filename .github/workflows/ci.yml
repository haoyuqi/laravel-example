name: CI

on:
  push:
    branches:
      - 'master'
    paths-ignore:
      - 'README.md'
      - 'LICENSE'

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [13]

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: laravel
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v2
      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"
      - name: Composer Install
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Npm Install And Build
        run: |
          npm install
          npm run prod
      - name: Generate Key
        run: php artisan key:generate
      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache
      - name: Database Migrate
        run: php artisan migrate

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: build

    strategy:
      matrix:
        node-version: [13]

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: laravel
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
      redis:
        image: redis
        ports:
          - 6379:6379
        options: --name redis

    steps:
      - uses: actions/checkout@v2
      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"
      - name: Composer Install
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Npm Install And Build
        run: |
          npm install
          npm run dev
      - name: Generate Key
        run: php artisan key:generate
      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache
      - name: Database Migrate
        run: php artisan migrate
      - name: Start PHP Web Server
        run: nohup php -S localhost:8000 -t ${{ github.workspace }}/public &
      - name: LaraStan
        run: php artisan code:analyse --paths="app,config"
        continue-on-error: true
      - name: PHPunit Test
        run: vendor/bin/phpunit
      - name: Cypress Test
        uses: cypress-io/github-action@v1
        with:
          install: false
          working-directory: tests
          env: HOST=http://localhost:8000
          wait-on: 'http://localhost:8000'
      - uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: cypress-screenshots
          path: tests/cypress/screenshots
      - uses: actions/upload-artifact@v1
        if: always()
        with:
          name: cypress-videos
          path: tests/cypress/videos

